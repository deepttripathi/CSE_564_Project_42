{"ast":null,"code":"import * as d3Module from \"d3\";\nimport { event as currentEvent } from 'd3-selection';\nconst d3 = { ...d3Module\n};\n\nd3.functor = function functor(v) {\n  return typeof v === \"function\" ? v : function () {\n    return v;\n  };\n};\n\nd3.tip = function () {\n  var direction = d3_tip_direction,\n      offset = d3_tip_offset,\n      html = d3_tip_html,\n      node = initNode(),\n      svg = null,\n      point = null,\n      target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    point = svg.createSVGPoint();\n    document.body.appendChild(node);\n  } // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n\n\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop();\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir = direction.apply(this, args),\n        nodel = getNodeEl(),\n        i = directions.length,\n        coords,\n        scrollTop = document.documentElement.scrollTop || document.body.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n    nodel.html(content).style('position', 'absolute').style('opacity', 1).style('pointer-events', 'all');\n\n    while (i--) nodel.classed(directions[i], false);\n\n    coords = direction_callbacks[dir].apply(this);\n    nodel.classed(dir, true).style('top', coords.top + poffset[0] + scrollTop + 'px').style('left', coords.left + poffset[1] + scrollLeft + 'px');\n    return tip;\n  }; // Public - hide the tooltip\n  //\n  // Returns a tip\n\n\n  tip.hide = function () {\n    var nodel = getNodeEl();\n    nodel.style('opacity', 0).style('pointer-events', 'none');\n    return tip;\n  }; // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n\n\n  tip.attr = function (n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n);\n    } else {\n      var args = Array.prototype.slice.call(arguments);\n      d3.selection.prototype.attr.apply(getNodeEl(), args);\n    }\n\n    return tip;\n  }; // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n\n\n  tip.style = function (n, v) {\n    // debugger;\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n);\n    } else {\n      var args = Array.prototype.slice.call(arguments);\n\n      if (args.length === 1) {\n        var styles = args[0];\n        Object.keys(styles).forEach(function (key) {\n          return d3.selection.prototype.style.apply(getNodeEl(), [key, styles[key]]);\n        });\n      }\n    }\n\n    return tip;\n  }; // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n\n\n  tip.direction = function (v) {\n    if (!arguments.length) return direction;\n    direction = v == null ? v : d3.functor(v);\n    return tip;\n  }; // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n\n\n  tip.offset = function (v) {\n    if (!arguments.length) return offset;\n    offset = v == null ? v : d3.functor(v);\n    return tip;\n  }; // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n\n\n  tip.html = function (v) {\n    if (!arguments.length) return html;\n    html = v == null ? v : d3.functor(v);\n    return tip;\n  }; // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n\n\n  tip.destroy = function () {\n    if (node) {\n      getNodeEl().remove();\n      node = null;\n    }\n\n    return tip;\n  };\n\n  function d3_tip_direction() {\n    return 'n';\n  }\n\n  function d3_tip_offset() {\n    return [0, 0];\n  }\n\n  function d3_tip_html() {\n    return ' ';\n  }\n\n  var direction_callbacks = {\n    n: direction_n,\n    s: direction_s,\n    e: direction_e,\n    w: direction_w,\n    nw: direction_nw,\n    ne: direction_ne,\n    sw: direction_sw,\n    se: direction_se\n  };\n  var directions = Object.keys(direction_callbacks);\n\n  function direction_n() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function direction_s() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function direction_e() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function direction_w() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function direction_nw() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function direction_ne() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function direction_sw() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function direction_se() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.se.y,\n      left: bbox.e.x\n    };\n  }\n\n  function initNode() {\n    var node = d3.select(document.createElement('div'));\n    node.style('position', 'absolute').style('top', 0).style('opacity', 0).style('pointer-events', 'none').style('box-sizing', 'border-box');\n    return node.node();\n  }\n\n  function getSVGNode(el) {\n    el = el.node();\n    if (el.tagName.toLowerCase() === 'svg') return el;\n    return el.ownerSVGElement;\n  }\n\n  function getNodeEl() {\n    if (node === null) {\n      node = initNode(); // re-add node to DOM\n\n      document.body.appendChild(node);\n    }\n\n    ;\n    return d3.select(node);\n  } // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n  // sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n\n\n  function getScreenBBox() {\n    var targetel = target || currentEvent.target;\n\n    while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n      targetel = targetel.parentNode;\n    }\n\n    var bbox = {},\n        matrix = targetel.getScreenCTM(),\n        tbbox = targetel.getBBox(),\n        width = tbbox.width,\n        height = tbbox.height,\n        x = tbbox.x,\n        y = tbbox.y;\n    point.x = x;\n    point.y = y;\n    bbox.nw = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x -= width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y -= height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x += width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x -= width / 2;\n    point.y -= height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y += height;\n    bbox.s = point.matrixTransform(matrix);\n    return bbox;\n  }\n\n  return tip;\n};\n\nexport default d3;","map":{"version":3,"sources":["/Users/snoopy/PycharmProjects/Vis_project/CSE_564_Project_42/frontend/src/charts/d3-tip-example.js"],"names":["d3Module","event","currentEvent","d3","functor","v","tip","direction","d3_tip_direction","offset","d3_tip_offset","html","d3_tip_html","node","initNode","svg","point","target","vis","getSVGNode","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","content","apply","poffset","dir","nodel","getNodeEl","i","directions","coords","scrollTop","documentElement","scrollLeft","style","classed","direction_callbacks","top","left","hide","attr","n","selection","styles","Object","keys","forEach","key","destroy","remove","direction_n","s","direction_s","e","direction_e","w","direction_w","nw","direction_nw","ne","direction_ne","sw","direction_sw","se","direction_se","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","select","createElement","el","tagName","toLowerCase","ownerSVGElement","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform"],"mappings":"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","sourcesContent":["import * as d3Module from \"d3\"\nimport {event as currentEvent} from 'd3-selection'\n\nconst d3 = {\n    ...d3Module\n}\n\nd3.functor = function functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  };\n  \nd3.tip = function() {\n  \n    var direction = d3_tip_direction,\n        offset    = d3_tip_offset,\n        html      = d3_tip_html,\n        node      = initNode(),\n        svg       = null,\n        point     = null,\n        target    = null\n  \n    function tip(vis) {\n      svg = getSVGNode(vis)\n      point = svg.createSVGPoint()\n      document.body.appendChild(node)\n    }\n  \n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments)\n      if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n  \n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft\n  \n      nodel.html(content)\n        .style('position', 'absolute')\n        .style('opacity', 1)\n        .style('pointer-events', 'all')\n  \n      while(i--) nodel.classed(directions[i], false)\n      coords = direction_callbacks[dir].apply(this)\n      nodel.classed(dir, true)\n        .style('top', (coords.top +  poffset[0]) + scrollTop + 'px')\n        .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n  \n      return tip\n    }\n  \n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl()\n      nodel\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n      return tip\n    }\n  \n    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      } else {\n        var args =  Array.prototype.slice.call(arguments)\n        d3.selection.prototype.attr.apply(getNodeEl(), args)\n      }\n  \n      return tip\n    }\n  \n    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    tip.style = function(n, v) {\n      // debugger;\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      } else {\n        var args = Array.prototype.slice.call(arguments);\n        if (args.length === 1) {\n          var styles = args[0];\n          Object.keys(styles).forEach(function(key) {\n            return d3.selection.prototype.style.apply(getNodeEl(), [key, styles[key]]);\n          });\n        }\n      }\n  \n      return tip\n    }\n  \n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : d3.functor(v)\n  \n      return tip\n    }\n  \n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : d3.functor(v)\n  \n      return tip\n    }\n  \n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : d3.functor(v)\n  \n      return tip\n    }\n  \n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if(node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip;\n    }\n  \n    function d3_tip_direction() { return 'n' }\n    function d3_tip_offset() { return [0, 0] }\n    function d3_tip_html() { return ' ' }\n  \n    var direction_callbacks = {\n      n:  direction_n,\n      s:  direction_s,\n      e:  direction_e,\n      w:  direction_w,\n      nw: direction_nw,\n      ne: direction_ne,\n      sw: direction_sw,\n      se: direction_se\n    };\n  \n    var directions = Object.keys(direction_callbacks);\n  \n    function direction_n() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n  \n    function direction_s() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n  \n    function direction_e() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n  \n    function direction_w() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n  \n    function direction_nw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n  \n    function direction_ne() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n  \n    function direction_sw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n  \n    function direction_se() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.se.y,\n        left: bbox.e.x\n      }\n    }\n  \n    function initNode() {\n      var node = d3.select(document.createElement('div'))\n      node\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('opacity', 0)\n        .style('pointer-events', 'none')\n        .style('box-sizing', 'border-box')\n  \n      return node.node()\n    }\n  \n    function getSVGNode(el) {\n      el = el.node()\n      if(el.tagName.toLowerCase() === 'svg')\n        return el\n  \n      return el.ownerSVGElement\n    }\n  \n    function getNodeEl() {\n      if(node === null) {\n        node = initNode();\n        // re-add node to DOM\n        document.body.appendChild(node);\n      };\n      return d3.select(node);\n    }\n  \n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n    // sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox() {\n      var targetel   = target || currentEvent.target;\n  \n      while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n          targetel = targetel.parentNode;\n      }\n  \n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y\n  \n      point.x = x\n      point.y = y\n      bbox.nw = point.matrixTransform(matrix)\n      point.x += width\n      bbox.ne = point.matrixTransform(matrix)\n      point.y += height\n      bbox.se = point.matrixTransform(matrix)\n      point.x -= width\n      bbox.sw = point.matrixTransform(matrix)\n      point.y -= height / 2\n      bbox.w  = point.matrixTransform(matrix)\n      point.x += width\n      bbox.e = point.matrixTransform(matrix)\n      point.x -= width / 2\n      point.y -= height / 2\n      bbox.n = point.matrixTransform(matrix)\n      point.y += height\n      bbox.s = point.matrixTransform(matrix)\n  \n      return bbox\n    }\n  \n    return tip\n  };\n\n  export default d3"]},"metadata":{},"sourceType":"module"}