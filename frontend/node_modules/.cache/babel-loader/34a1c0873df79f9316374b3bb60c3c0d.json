{"ast":null,"code":"var _jsxFileName = \"/Users/snoopy/PycharmProjects/Vis_project/CSE_564_Project_42/frontend/src/charts/CountryMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\"; // import * as d3Module from \"d3\"\n\nimport d3 from \"./d3-tip-example\";\nimport * as topojson from \"topojson\";\nimport data from './world_countries.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst format = d3.format(\",\"); // const d3 = {\n//   ...d3Module,\n// }\n\nexport default function CountryMap({\n  mapData,\n  colorMap\n}) {\n  _s();\n\n  console.log(\"mapData:\", mapData);\n  console.log(\"colorMap:\", colorMap);\n  console.log(\"data:\", data);\n  const svgRef = useRef();\n  console.log(\"d3Tip\", d3);\n  useEffect(async () => {\n    const tip = d3.tip().attr('class', 'd3-tip').offset([-10, 0]).html(function (d, name) {\n      return `<strong>Country: </strong><span class='details'> ${d.properties.name} <br></span><strong>${name}: </strong><span class='details'> ${format(d[name])}</span>`;\n    });\n    var options = [\"Score\", \"Overall rank\", \"GDP per capita\", \"Social support\", \"Healthy life expectancy\", \"Freedom to make life choices\", \"Generosity\", \"Perceptions of corruption\", \"Population\", \"Percentage\", \"percentage_non_religious\"];\n    d3.select(\"#menu\").selectAll('myOptions').data(options).enter().append('option').text(function (d) {\n      return d;\n    }) // text showed in the menu\n    .attr(\"value\", function (d) {\n      return d;\n    });\n    displayMap(\"Score\"); // d3.select(\"#menu\").on(\"change\", function(){\n    //     selected_feature=d3.select(\"#menu\").property(\"value\");\n    //     // console.log(selected_feature)\n    //     displayMap(selected_feature) })\n\n    const margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    const color = d3.scaleThreshold().domain([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]).range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\", \"rgb(33,113,181)\", \"rgb(8,81,156)\", \"rgb(8,48,107)\", \"rgb(3,19,43)\"]);\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).append('g').attr('class', 'map');\n    const projection = d3.geoMercator().scale(80).translate([width / 2, height / 2]);\n    const path = d3.geoPath().projection(projection);\n    svg.call(tip); // const scoreByCountry = {}\n\n    var optionByCountry = {};\n    var colorVal = {};\n    mapData.forEach(function (d) {\n      optionByCountry[d.iso] = +d[feature];\n    });\n    max = 0;\n\n    function getMaxVal() {\n      return mapData.reduce((max, p) => +p[feature] > max ? +p[feature] : max, mapData[0][feature]);\n    }\n\n    maxVal = getMaxVal();\n    min = -2;\n\n    function getMinVal() {\n      return mapData.reduce((min, p) => +p[feature] < min ? +p[feature] : min, mapData[0][feature]);\n    }\n\n    minVal = getMinVal();\n    range = maxVal / 10;\n    var i;\n    var label = [];\n    xmin = minVal;\n    range = range.toFixed(2);\n\n    for (i = 0; i < 10; i++) {\n      xmin = Number(xmin).toFixed(2);\n      newrange = (Number(xmin) + Number(range)).toFixed(2);\n      label[i] = xmin.toString() + \"-\" + newrange.toString();\n      xmin = newrange;\n    }\n\n    if (document.getElementById(\"legend\")) document.getElementById(\"legend\").remove(); //adding legend\n\n    var g = svg.append(\"g\").attr(\"class\", \"legendThreshold\").attr(\"transform\", \"translate(5,320)\");\n    g.append(\"text\").attr(\"class\", \"caption\").attr(\"id\", \"legend\").attr(\"x\", 0).attr(\"y\", -10).text(function (d) {\n      return feature;\n    });\n    var legend = d3.legendColor().labels(function (d) {\n      return label[d.i];\n    }).shapePadding(4).scale(color);\n    svg.select(\".legendThreshold\").call(legend);\n    colorMap.forEach(function (d) {\n      colorVal[d.iso] = d[feature + \"_scaled\"];\n    });\n    console.log(colorVal);\n    data.features.forEach(function (d) {\n      d[feature] = optionByCountry[d.id];\n    });\n    svg.append(\"g\").attr(\"class\", \"countries\").selectAll(\"path\").data(data.features).enter().append(\"path\").attr(\"d\", path).style(\"fill\", function (d) {\n      return color(colorVal[d.id]);\n    }).style('stroke', 'white').style('stroke-width', 1.5).style(\"opacity\", 0.8) // tooltips\n    .style(\"stroke\", \"white\").style('stroke-width', 0.3).on('mouseover', function (d) {\n      tip.show(d, feature);\n      d3.select(this).style(\"opacity\", 1).style(\"stroke\", \"white\").style(\"stroke-width\", 3);\n    }).on('mouseout', function (d) {\n      tip.hide(d, feature);\n      d3.select(this).style(\"opacity\", 0.8).style(\"stroke\", \"white\").style(\"stroke-width\", 0.3);\n    }).on('click', function (d) {\n      console.log(d.properties.name);\n      country = d.properties.name; // drawBarChart(d.properties.name)\n\n      drawRadarPlot(d.properties.name); //print selected country name\n    });\n    svg.append(\"path\").data(topojson.mesh(data.features, function (a, b) {\n      return a.id !== b.id;\n    })).attr(\"class\", \"names\").attr(\"d\", path);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n} // export default CountryMap;\n\n_s(CountryMap, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = CountryMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"sources":["/Users/snoopy/PycharmProjects/Vis_project/CSE_564_Project_42/frontend/src/charts/CountryMap.js"],"names":["React","useRef","useEffect","d3","topojson","data","format","CountryMap","mapData","colorMap","console","log","svgRef","tip","attr","offset","html","d","name","properties","options","select","selectAll","enter","append","text","displayMap","margin","top","right","bottom","left","width","height","color","scaleThreshold","domain","range","svg","current","projection","geoMercator","scale","translate","path","geoPath","call","optionByCountry","colorVal","forEach","iso","feature","max","getMaxVal","reduce","p","maxVal","min","getMinVal","minVal","i","label","xmin","toFixed","Number","newrange","toString","document","getElementById","remove","g","legend","legendColor","labels","shapePadding","features","id","style","on","show","hide","country","drawRadarPlot","mesh","a","b"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\"\n// import * as d3Module from \"d3\"\nimport d3 from \"./d3-tip-example\"\nimport * as topojson from \"topojson\"\nimport data from './world_countries.json'\n\nconst format = d3.format(\",\")\n\n// const d3 = {\n//   ...d3Module,\n  \n// }\n\nexport default function CountryMap({ mapData, colorMap }) {\n  console.log(\"mapData:\", mapData)\n  console.log(\"colorMap:\", colorMap)\n  console.log(\"data:\", data)\n\n  const svgRef = useRef()\n\n  console.log(\"d3Tip\", d3)\n\n  useEffect(async()=> {\n    const tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html(function(d,name) {\n        return `<strong>Country: </strong><span class='details'> ${d.properties.name} <br></span><strong>${name}: </strong><span class='details'> ${format(d[name])}</span>`;\n      })\n\n\n      var options=[\"Score\",\"Overall rank\",\"GDP per capita\",\"Social support\", \"Healthy life expectancy\",\"Freedom to make life choices\",\"Generosity\",\n      \"Perceptions of corruption\",\"Population\",\"Percentage\",\"percentage_non_religious\"]\n      \n      d3.select(\"#menu\")\n            .selectAll('myOptions')\n              .data(options)\n            .enter()\n              .append('option')\n            .text(function (d) { return d; }) // text showed in the menu\n            .attr(\"value\", function (d) { return d; })\n      \n          displayMap(\"Score\")\n  \n      // d3.select(\"#menu\").on(\"change\", function(){\n      //     selected_feature=d3.select(\"#menu\").property(\"value\");\n      //     // console.log(selected_feature)\n      //     displayMap(selected_feature) })\n  \n    const margin = {top: 0, right: 0, bottom: 0, left: 0}\n    const width = 800 - margin.left - margin.right\n    const height = 500 - margin.top - margin.bottom\n  \n    const color = d3.scaleThreshold()\n      .domain([1,2,3,4,5,6,7,8,9,10])\n      .range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\",\"rgb(33,113,181)\",\"rgb(8,81,156)\",\"rgb(8,48,107)\",\"rgb(3,19,43)\"])\n  \n    const svg = d3.select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append('g')\n      .attr('class', 'map')\n  \n    const projection = d3.geoMercator()\n      .scale(80)\n      .translate( [width / 2, height / 2])\n    \n    const path = d3.geoPath()\n      .projection(projection)\n  \n    svg.call(tip)\n  \n    // const scoreByCountry = {}\n\n    var optionByCountry={};\n    var colorVal={};\n        \n    mapData.forEach(function (d)  { \n      optionByCountry[d.iso]=+d[feature]; \n    });\n\n    max=0\n    function getMaxVal() {\n      return mapData.reduce((max, p) => +p[feature] > max ? +p[feature]: max, mapData[0][feature]);\n    }\n    maxVal=getMaxVal()\n\n    min=-2\n    function getMinVal() {\n      return mapData.reduce((min, p) => +p[feature] < min ? +p[feature]: min, mapData[0][feature]);\n    }\n    minVal=getMinVal()\n\n    range=(maxVal/10)\n    \n    var i;\n    var label=[]\n    xmin=minVal\n    range=range.toFixed(2)\n    for (i = 0; i < 10; i++) { \n      xmin=Number(xmin).toFixed(2)\n      newrange=(Number(xmin)+Number(range)).toFixed(2)\n      label[i]=((xmin).toString())+\"-\"+(newrange.toString());\n      xmin=newrange\n    }\n    \n    if(document.getElementById(\"legend\"))\n    document.getElementById(\"legend\").remove();\n\n    //adding legend\n    var g = svg.append(\"g\")\n    .attr(\"class\", \"legendThreshold\")\n    .attr(\"transform\", \"translate(5,320)\");\n    g.append(\"text\")\n    .attr(\"class\", \"caption\")\n    .attr(\"id\",\"legend\")\n    .attr(\"x\", 0)\n    .attr(\"y\", -10)\n    .text(function (d){\n      return feature;\n    });\n\n    var legend = d3.legendColor()\n    .labels(function (d) { return label[d.i]; })\n    .shapePadding(4)\n    .scale(color);\n    svg.select(\".legendThreshold\")\n    .call(legend);\n\n    colorMap.forEach(function (d)  { \n      colorVal[d.iso]=d[feature+\"_scaled\"]; \n    });\n\n    console.log(colorVal)\n    data.features.forEach(function(d) { d[feature] = optionByCountry[d.id] });\n    svg.append(\"g\")\n      .attr(\"class\", \"countries\")\n    .selectAll(\"path\")\n      .data(data.features)\n      .enter().append(\"path\")\n      .attr(\"d\", path)\n        .style(\"fill\", function(d) { \n          return color(colorVal[d.id]); })\n        .style('stroke', 'white')\n        .style('stroke-width', 1.5)\n        .style(\"opacity\",0.8)\n  // tooltips\n        .style(\"stroke\",\"white\")\n      .style('stroke-width', 0.3)\n    .on('mouseover',function(d){\n\n        tip.show(d,feature);\n      d3.select(this)\n        .style(\"opacity\", 1)\n        .style(\"stroke\",\"white\")\n        .style(\"stroke-width\",3)\n    })\n    .on('mouseout', function(d){\n        tip.hide(d,feature);\n\n      d3.select(this)\n        .style(\"opacity\", 0.8)\n        .style(\"stroke\",\"white\")\n        .style(\"stroke-width\",0.3);\n    })\n    .on('click', function(d){\n      console.log(d.properties.name); \n      country= d.properties.name;\n      // drawBarChart(d.properties.name)\n      drawRadarPlot(d.properties.name); //print selected country name\n    });\n\nsvg.append(\"path\")\n  .data(topojson.mesh(data.features, function(a, b) { return a.id !== b.id; }))\n  .attr(\"class\", \"names\")\n  .attr(\"d\", path);  \n}, [])\n  return(\n    <svg ref={svgRef}></svg>\n  )\n}\n\n// export default CountryMap;\n"]},"metadata":{},"sourceType":"module"}