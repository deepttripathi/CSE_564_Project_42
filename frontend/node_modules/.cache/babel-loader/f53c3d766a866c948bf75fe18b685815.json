{"ast":null,"code":"var _jsxFileName = \"/Users/snoopy/PycharmProjects/Vis_project/CSE_564_Project_42/frontend/src/charts/CountryMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\"; // import * as d3Module from \"d3\"\n\nimport d3 from \"./d3-tip-example\";\nimport * as topojson from \"topojson\";\nimport data from './world_countries.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst format = d3.format(\",\"); // const d3 = {\n//   ...d3Module,\n// }\n\nconst CountryMap = ({\n  mapData,\n  colorMap\n}) => {\n  _s();\n\n  console.log(\"mapData:\", mapData);\n  console.log(\"colorMap:\", colorMap);\n  console.log(\"data:\", data);\n  const svgRef = useRef();\n  console.log(\"d3Tip\", d3);\n  useEffect(async () => {\n    const tip = d3.tip().attr('class', 'd3-tip').offset([-10, 0]).html(function (d, name) {\n      return `<strong>Country: </strong><span class='details'> ${d.properties.name} <br></span><strong>${name}: </strong><span class='details'> ${format(d[name])}</span>`;\n    });\n    const margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    const color = d3.scaleThreshold().domain([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]).range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\", \"rgb(33,113,181)\", \"rgb(8,81,156)\", \"rgb(8,48,107)\", \"rgb(3,19,43)\"]);\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).append('g').attr('class', 'map');\n    const projection = d3.geoMercator().scale(80).translate([width / 2, height / 2]);\n    const path = d3.geoPath().projection(projection);\n    svg.call(tip);\n    const scoreByCountry = {};\n    const colorVal = {};\n    data.features.forEach(function (d) {\n      d[feature] = optionByCountry[d.id];\n    });\n    svg.append(\"g\").attr(\"class\", \"countries\").selectAll(\"path\").data(data.features).enter().append(\"path\").attr(\"d\", path).style(\"fill\", function (d) {\n      return color(colorVal[d.id]);\n    }).style('stroke', 'white').style('stroke-width', 1.5).style(\"opacity\", 0.8) // tooltips\n    .style(\"stroke\", \"white\").style('stroke-width', 0.3).on('mouseover', function (d) {\n      tip.show(d, feature);\n      d3.select(this).style(\"opacity\", 1).style(\"stroke\", \"white\").style(\"stroke-width\", 3);\n    }).on('mouseout', function (d) {\n      tip.hide(d, feature);\n      d3.select(this).style(\"opacity\", 0.8).style(\"stroke\", \"white\").style(\"stroke-width\", 0.3);\n    }).on('click', function (d) {\n      console.log(d.properties.name);\n      country = d.properties.name; // drawBarChart(d.properties.name)\n      // drawRadarPlot(d.properties.name); //print selected country name\n    });\n    svg.append(\"path\").data(topojson.mesh(data.features, function (a, b) {\n      return a.properties.name !== b.properties.name;\n    })).attr(\"class\", \"names\").attr(\"d\", path);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryMap, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = CountryMap;\nexport default CountryMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryMap\");","map":{"version":3,"sources":["/Users/snoopy/PycharmProjects/Vis_project/CSE_564_Project_42/frontend/src/charts/CountryMap.js"],"names":["React","useRef","useEffect","d3","topojson","data","format","CountryMap","mapData","colorMap","console","log","svgRef","tip","attr","offset","html","d","name","properties","margin","top","right","bottom","left","width","height","color","scaleThreshold","domain","range","svg","select","current","append","projection","geoMercator","scale","translate","path","geoPath","call","scoreByCountry","colorVal","features","forEach","feature","optionByCountry","id","selectAll","enter","style","on","show","hide","country","mesh","a","b"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\"\n// import * as d3Module from \"d3\"\nimport d3 from \"./d3-tip-example\"\nimport * as topojson from \"topojson\"\nimport data from './world_countries.json'\n\nconst format = d3.format(\",\")\n\n// const d3 = {\n//   ...d3Module,\n  \n// }\n\nconst CountryMap = ({ mapData, colorMap })=> {\n  console.log(\"mapData:\", mapData)\n  console.log(\"colorMap:\", colorMap)\n  console.log(\"data:\", data)\n\n  const svgRef = useRef()\n\n  console.log(\"d3Tip\", d3)\n\n  useEffect(async()=> {\n    const tip = d3.tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html(function(d,name) {\n        return `<strong>Country: </strong><span class='details'> ${d.properties.name} <br></span><strong>${name}: </strong><span class='details'> ${format(d[name])}</span>`;\n      })\n  \n    const margin = {top: 0, right: 0, bottom: 0, left: 0}\n    const width = 800 - margin.left - margin.right\n    const height = 500 - margin.top - margin.bottom\n  \n    const color = d3.scaleThreshold()\n      .domain([1,2,3,4,5,6,7,8,9,10])\n      .range([\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\",\"rgb(33,113,181)\",\"rgb(8,81,156)\",\"rgb(8,48,107)\",\"rgb(3,19,43)\"])\n  \n  \n    const svg = d3.select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append('g')\n      .attr('class', 'map')\n  \n    const projection = d3.geoMercator()\n      .scale(80)\n      .translate( [width / 2, height / 2])\n    \n    const path = d3.geoPath()\n      .projection(projection)\n  \n    svg.call(tip)\n  \n    const scoreByCountry = {}\n    const colorVal={}\n\n    data.features.forEach(function(d) { d[feature] = optionByCountry[d.id] });\n        svg.append(\"g\")\n          .attr(\"class\", \"countries\")\n        .selectAll(\"path\")\n          .data(data.features)\n          .enter().append(\"path\")\n          .attr(\"d\", path)\n            .style(\"fill\", function(d) { \n              return color(colorVal[d.id]); })\n            .style('stroke', 'white')\n            .style('stroke-width', 1.5)\n            .style(\"opacity\",0.8)\n      // tooltips\n            .style(\"stroke\",\"white\")\n          .style('stroke-width', 0.3)\n        .on('mouseover',function(d){\n\n            tip.show(d,feature);\n          d3.select(this)\n            .style(\"opacity\", 1)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",3)\n        })\n        .on('mouseout', function(d){\n            tip.hide(d,feature);\n\n          d3.select(this)\n            .style(\"opacity\", 0.8)\n            .style(\"stroke\",\"white\")\n            .style(\"stroke-width\",0.3);\n        })\n        .on('click', function(d){\n          console.log(d.properties.name); \n          country= d.properties.name;\n          // drawBarChart(d.properties.name)\n          // drawRadarPlot(d.properties.name); //print selected country name\n        });\n\n\n  svg.append(\"path\")\n      .data(topojson.mesh(data.features, function(a, b) { return a.properties.name !== b.properties.name; }))\n      .attr(\"class\", \"names\")\n      .attr(\"d\", path);\n    }, [])\n\n  return(\n    <svg ref={svgRef}></svg>\n  )\n}\n\nexport default CountryMap\n"]},"metadata":{},"sourceType":"module"}